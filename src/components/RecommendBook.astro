---
import { getCollection } from 'astro:content';
import { getPath } from "@/utils/getPath";

// Ch·ªß ƒë·ªÅ v√† tags √°nh x·∫°
const TOPICS = {
  "Trinh th√°m": ["Crime", "Detective"],
  "Khoa h·ªçc": ["Science", "Non-fiction"],
  "T√¨nh c·∫£m": ["Romance", "Love"],
  // Th√™m c√°c ch·ªß ƒë·ªÅ kh√°c n·∫øu c·∫ßn
};

const topicList = Object.keys(TOPICS);

// L·∫•y to√†n b·ªô b√†i vi·∫øt t·ª´ content collection 'blog'
const posts = await getCollection('blog');

// Chuy·ªÉn sang d·∫°ng ƒë∆°n gi·∫£n ƒë·ªÉ truy·ªÅn sang client
const books = posts.map(post => ({
  title: post.data.title,
  tags: post.data.tags || [],
  description: post.data.description || '',
  href: getPath(post.id, post.filePath), // S·ª≠ d·ª•ng getPath ƒë·ªÉ t·∫°o link
}));
---

<div class="recommend-wrapper">
  <h2 class="recommend-heading">üìö H√¥m nay b·∫°n mu·ªën ƒë·ªçc g√¨?</h2>

  <div class="topic-buttons">
    {topicList.map(topic => (
      <button type="button" class="topic-button" data-topic={topic}>
        {topic}
      </button>
    ))}
  </div>

  <div id="recommend-result" class="recommend-result-area"></div>
</div>

<script type="module">
  const books = JSON.parse(document.getElementById('books-data').textContent);
  const TOPICS = JSON.parse(document.getElementById('topics-data').textContent);

  const resultDiv = document.getElementById('recommend-result');

  let currentTopic = "";
  let currentFiltered = [];
  let currentBook = null;

  function pickRandom() {
    if (!currentFiltered.length) return null;
    return currentFiltered[Math.floor(Math.random() * currentFiltered.length)];
  }

  function showBook(book) {
    currentBook = book;
  
    resultDiv.innerHTML = `
      <div class="fade-in">
        <p class="book-title">üìñ ${book.title}</p>
        <div class="recommend-actions">
          <a href="${book.href}" class="recommend-btn">üìñ Xem ngay</a>
          <button id="change-book-btn" class="recommend-btn alt">üîÅ ƒê·ªïi s√°ch</button>
        </div>
      </div>
    `;
  
    document.getElementById("change-book-btn").addEventListener("click", () => {
      const newBook = pickRandom();
      if (newBook && newBook.href !== currentBook.href) {
        showBook(newBook);
      }
    });
  }

  document.querySelectorAll('.topic-button').forEach(button => {
    button.addEventListener('click', () => {
      currentTopic = button.getAttribute('data-topic');
      const tags = TOPICS[currentTopic];
      currentFiltered = books.filter(book =>
        book.tags.some(tag => tags.includes(tag))
      );

      if (currentFiltered.length === 0) {
        resultDiv.innerHTML = '<p>Kh√¥ng t√¨m th·∫•y s√°ch ph√π h·ª£p.</p>';
        return;
      }

      const randomBook = pickRandom();
      showBook(randomBook);
    });
  });
  window.addEventListener("pageshow", (event) => {
    // N·∫øu quay l·∫°i b·∫±ng history (back/forward)
    if (event.persisted) {
      // Reset l·∫°i ph·∫ßn hi·ªÉn th·ªã & bi·∫øn
      document.getElementById("recommend-result").innerHTML = "";
      currentBook = null;
      currentFiltered = [];
      currentTopic = "";
    }
  });
</script>

<!-- ƒê∆∞a data v√†o HTML an to√†n -->
<script id="books-data" type="application/json" set:html={JSON.stringify(books)}></script>
<script id="topics-data" type="application/json" set:html={JSON.stringify(TOPICS)}></script>


<style>
.recommend-wrapper {
  padding: 2rem;
  background-color: var(--theme-bg);
  border: 1px solid var(--border);
  border-radius: 12px;
  margin: 2rem auto;
  max-width: 640px;
}

.recommend-heading {
  font-size: 1.4rem;
  font-weight: 600;
  color: var(--text);
  margin-bottom: 1.5rem;
  text-align: center;
}

.topic-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: center;
  margin-bottom: 1.5rem;
}

.topic-button {
  padding: 0.6rem 1.2rem;
  background-color: var(--primary-light, #e0e7ff);
  border: 1px solid var(--primary, #3b82f6);
  color: var(--primary-dark, #1e40af);
  border-radius: 999px;
  font-size: 0.95rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}
.topic-button:hover {
  background-color: var(--primary, #3b82f6);
  color: white;
}

.book-title {
  text-align: center;
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--primary);
  margin-bottom: 1rem;
}

.recommend-actions {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 0.5rem;
}

.recommend-btn {
  padding: 0.5rem 1rem;
  border-radius: 6px;
  font-weight: 500;
  font-size: 0.95rem;
  text-decoration: none;
  color: white;
  background-color: var(--primary, #3b82f6);
  border: none;
}
.recommend-btn.alt {
  background-color: #6b7280;
}
.recommend-btn:hover {
  opacity: 0.9;
}
.fade-in {
  animation: fadeIn 0.4s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
</style>
