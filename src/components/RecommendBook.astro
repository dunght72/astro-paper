---
import { getCollection } from 'astro:content';
import { getPath } from "@/utils/getPath";

// Ch·ªß ƒë·ªÅ v√† tags √°nh x·∫°
const TOPICS = {
  "Trinh th√°m": ["Crime", "Detective"],
  "Khoa h·ªçc": ["Science", "Non-fiction"],
  "T√¨nh c·∫£m": ["Romance", "Love"],
  // Th√™m c√°c ch·ªß ƒë·ªÅ kh√°c n·∫øu c·∫ßn
};

const topicList = Object.keys(TOPICS);

// L·∫•y to√†n b·ªô b√†i vi·∫øt t·ª´ content collection 'blog'
const posts = await getCollection('blog');

// Chuy·ªÉn sang d·∫°ng ƒë∆°n gi·∫£n ƒë·ªÉ truy·ªÅn sang client
const books = posts.map(post => ({
  title: post.data.title,
  tags: post.data.tags || [],
  description: post.data.description || '',
  href: getPath(post.id, post.filePath), // S·ª≠ d·ª•ng getPath ƒë·ªÉ t·∫°o link
}));
---

<div class="recommend-wrapper">
  <h2 class="recommend-heading">üìö H√¥m nay b·∫°n mu·ªën ƒë·ªçc g√¨?</h2>

  <div class="topic-buttons">
    {topicList.map(topic => (
      <button type="button" class="topic-button" data-topic={topic}>
        {topic}
      </button>
    ))}
  </div>

  <div id="recommend-result" class="recommend-result-area"></div>
</div>

<script type="module">
  const books = JSON.parse(document.getElementById('books-data').textContent);
  const TOPICS = JSON.parse(document.getElementById('topics-data').textContent);

  const resultDiv = document.getElementById('recommend-result');

  document.querySelectorAll('.topic-button').forEach(button => {
    button.addEventListener('click', () => {
      const topic = button.getAttribute('data-topic');
      const tags = TOPICS[topic];

      const filtered = books.filter(book =>
        book.tags.some(tag => tags.includes(tag))
      );

      if (filtered.length === 0) {
        resultDiv.innerHTML = `<p>Kh√¥ng t√¨m th·∫•y s√°ch ph√π h·ª£p.</p>`;
        return;
      }

      const book = filtered[Math.floor(Math.random() * filtered.length)];

      resultDiv.innerHTML = `
        <p class="book-title">üìñ <a href="${book.href}" class="recommend-link">${book.title}</a></p>
        <p class="recommend-sub">ƒêang chuy·ªÉn ƒë·∫øn b√†i vi·∫øt...</p>
      `;

      setTimeout(() => {
        window.location.href = book.href;
      }, 3000);
    });
  });
</script>

<!-- ƒê∆∞a data v√†o HTML an to√†n -->
<script id="books-data" type="application/json" set:html={JSON.stringify(books)}></script>
<script id="topics-data" type="application/json" set:html={JSON.stringify(TOPICS)}></script>


<style>
.topic-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: center;
  margin-bottom: 1.5rem;
}

.topic-button {
  padding: 0.6rem 1.2rem;
  background-color: var(--primary-light, #e0e7ff);
  border: 1px solid var(--primary, #3b82f6);
  color: var(--primary-dark, #1e40af);
  border-radius: 999px;
  font-size: 0.95rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.topic-button:hover {
  background-color: var(--primary, #3b82f6);
  color: white;
}

.book-title {
  text-align: center;
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--primary);
}

.recommend-sub {
  text-align: center;
  font-style: italic;
  font-size: 0.9rem;
  color: var(--text-light);
  margin-top: 0.3rem;
}
</style>
