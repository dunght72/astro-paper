---
import { getCollection } from 'astro:content';

// Chủ đề và tags ánh xạ
const TOPICS = {
  "Trinh thám": ["Crime", "Detective"],
  "Khoa học": ["Science", "Non-fiction"],
  "Tình cảm": ["Romance", "Love"],
  // Thêm các chủ đề khác nếu cần
};

const topicList = Object.keys(TOPICS);

// Lấy toàn bộ bài viết từ content collection 'blog'
const posts = await getCollection('blog');

// Chuyển sang dạng đơn giản để truyền sang client
const books = posts.map(post => ({
  title: post.data.title,
  tags: post.data.tags || [],
  description: post.data.description || '',
  slug: post.slug,
}));
---

<div class="recommend-container">
  <label for="topic-select" class="recommend-label">Chọn chủ đề:</label>
  <select id="topic-select" class="recommend-select">
    <option value="">-- Chọn --</option>
    {topicList.map(topic => (
      <option value={topic}>{topic}</option>
    ))}
  </select>

  <div id="recommend-result"></div>
</div>

<script type="module">
  // Truyền dữ liệu books và topics sang JS
  const books = /** @type {any[]} */ ({JSON.stringify(books)});
  const TOPICS = /** @type {Record<string, string[]>} */ ({JSON.stringify(TOPICS)});
  const select = document.getElementById('topic-select');
  const resultDiv = document.getElementById('recommend-result');

  select.addEventListener('change', () => {
    const topic = select.value;
    if (!topic) {
      resultDiv.innerHTML = '';
      return;
    }
    const tags = TOPICS[topic];
    const filtered = books.filter(book => book.tags.some(tag => tags.includes(tag)));
    if (filtered.length === 0) {
      resultDiv.innerHTML = '<p>Không tìm thấy sách phù hợp.</p>';
      return;
    }
    const book = filtered[Math.floor(Math.random() * filtered.length)];
    resultDiv.innerHTML = `
      <div class="recommend-card">
        <h3 class="recommend-title">${book.title}</h3>
        <p class="recommend-desc">${book.description}</p>
        <div class="recommend-tags">
          ${book.tags.map(tag => `<span class="recommend-tag">${tag}</span>`).join(' ')}
        </div>
        <a href="/blog/${book.slug}" class="recommend-link">Xem review</a>
      </div>
    `;
  });
</script>

<style>
.recommend-container {
  margin: 2rem 0;
  padding: 1.5rem;
  background: #f8fafc;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.04);
  max-width: 420px;
}
.recommend-label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}
.recommend-select {
  width: 100%;
  padding: 0.5rem;
  border-radius: 6px;
  border: 1px solid #d1d5db;
  margin-bottom: 1rem;
}
.recommend-card {
  background: #fff;
  border-radius: 8px;
  padding: 1rem;
  margin-top: 1rem;
  box-shadow: 0 1px 4px rgba(0,0,0,0.05);
}
.recommend-title {
  margin: 0 0 0.5rem 0;
  font-size: 1.2rem;
  font-weight: bold;
}
.recommend-cover {
  max-width: 100%;
  border-radius: 6px;
  margin-bottom: 0.5rem;
}
.recommend-desc {
  font-size: 0.98rem;
  margin-bottom: 0.5rem;
}
.recommend-tags {
  margin-bottom: 0.5rem;
}
.recommend-tag {
  display: inline-block;
  background: #e0e7ff;
  color: #3730a3;
  border-radius: 4px;
  padding: 0.2em 0.6em;
  font-size: 0.85em;
  margin-right: 0.25em;
}
.recommend-link {
  color: #2563eb;
  text-decoration: underline;
  font-weight: 500;
}
</style>
